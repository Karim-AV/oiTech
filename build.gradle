plugins {
    id 'java'
    id 'io.qameta.allure' version '2.9.3'
}

wrapper {
    gradleVersion = '8.7'
}

group 'kz.abdukarimov'

repositories {
    mavenCentral()
}

ext {
    allureVersion = '2.26.0'
    junitVersion = '5.10.0'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

def allureVersion = '2.26.0'
def aspectJVersion = '1.9.22'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs.add('-parameters')
}

configurations {
    agent {
        canBeResolved = true
        canBeConsumed = true
    }
}

dependencies {
    agent "org.aspectj:aspectjweaver:$aspectJVersion"

    testImplementation platform("org.junit:junit-bom:5.10.2")
    testImplementation ("com.codeborne:selenide:6.19.1")
    testImplementation ("org.seleniumhq.selenium:selenium-java:4.21.0")
    testImplementation ("io.qameta.allure:allure-selenide:${allureVersion}")
    testImplementation ("org.slf4j:slf4j-simple:2.0.12")
    testImplementation ("io.qameta.allure:allure-junit5")
    testImplementation platform("io.qameta.allure:allure-bom:$allureVersion")
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.1'

    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
        exceptionFormat "full"

    }
    scanForTestClasses = false
    testLogging.showStandardStreams = true
    dependsOn 'cleanTest'

    useJUnitPlatform()
    ignoreFailures = true
    jvmArgs = [ "-javaagent:${configurations.agent.singleFile}" ]

}

allure {
    autoconfigure = true
    version = "${allureVersion}"

    aspectjweaver = true

    useJUnit5 {
        version = "${allureVersion}"
    }
}